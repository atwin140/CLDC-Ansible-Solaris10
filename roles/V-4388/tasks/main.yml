###############################################
# Developed For 7.2.4 by Andrew Darley     
#     andrew.darley.ctr@navy.mil  
#      
# Originally created for:
# Solaris 10 x86/SPARC Manual STIG - Ver 1
# Release: 19 Benchmark Date: 28 Jul 2017
# 
# This is expected to run with a play book that
# defines these variables
# output_path
# out_file
# FIX
###############################################


- name: V-4388 Check
  shell: if grep -i ftp /etc/passwd;   then grep -i ftp /etc/passwd | awk "-F:" '{print $6}' | while read DIR; do ls $DIR; done;   else echo No FTP user; fi
  args:
    executable: /bin/bash
  register: checkmyconf1
  ignore_errors: True
  changed_when: False

- name: V-4388 Check 2
  shell: if grep -i ftp /etc/passwd;   then grep -i ftp /etc/passwd | awk "-F:" '{print $6}' | while read DIR; do ls $DIR; done;   else echo No FTP user; fi
  args:
    executable: /bin/bash
  register: checkmyconf2
  ignore_errors: True
  changed_when: False

- name: V-4388 Finding Open Tags
  blockinfile:
    dest: "{{out_file}}"
    state: present
    marker: " "
    block: |
      <finding
      v_id="V-4388"
      rule_id="SV-39838r1_rule"
      raw_risk="II"
      datetime="{{ ansible_date_time.date }}">
      <title>The anonymous FTP account must be configured to use chroot or a similarly isolated environment.</title>
      <discussion>If an anonymous FTP account does not use a chroot or similarly isolated environment,  the system may be more vulnerable to exploits against the FTP service.  Such exploits could allow an attacker to gain shell access to the system and view, edit, or remove sensitive files.</discussion>
      <check_content>The default Solaris FTP daemon, in.ftpd, uses the ftp user's home directory as the chroot base for anonymous FTP.  If any files and directories within the ftp user's home directory are owned by any user other than root, or if any subdirectory other than pub has permissions more permissive than 0111, this is a finding.</check_content>
      <fix_text>Run the ftpconfig(1M) command to set up a chroot-ed environment for anonymous FTP with appropriate constraints.

      # ftpconfig &lt; anonymous FTP home directory&gt;</fix_text>

- name: V-4388 Pass
  blockinfile:
    dest: "{{out_file}}"
    state: present
    marker: " "
    block: |
      <procedure>
        Procedure: 
        # if grep -i ftp /etc/passwd;   then grep -i ftp /etc/passwd | awk "-F:" '{print $6}' | while read DIR; do ls $DIR; done;   else echo No FTP user; fi
      </procedure>
      <output>
        V-4388
          The anonymous FTP account must be configured to use chroot or a similarly isolated environment.
           If any files and directories within the ftp user's home directory are owned by any user other than root, or if any subdirectory other than pub has permissions more permissive than 0111, this is a finding.
          Procedure:
          # if grep -i ftp /etc/passwd;   then grep -i ftp /etc/passwd | awk "-F:" '{print $6}' | while read DIR; do ls $DIR; done;   else echo No FTP user; fi
          OUTPUT:
          ->  {{ checkmyconf1.stdout }}
          -
          This is NOT a finding
          -
      </output>
      <comments>there is no anonymous FTP account on the system</comments>
      <status>Not a Finding</status>
      <ccis>
        <cci>CCI-000366</cci>
      </ccis>
      </finding>
  when: (checkmyconf2.stdout != "" and REPORT == 1)

- name: V-4388 Fail
  blockinfile:
    dest: "{{out_file}}"
    state: present
    marker: " "
    block: |
      <procedure>
        Procedure: 
        # if grep -i ftp /etc/passwd;   then grep -i ftp /etc/passwd | awk "-F:" '{print $6}' | while read DIR; do ls $DIR; done;   else echo No FTP user; fi
      </procedure>
      <output>
        V-4388
          The anonymous FTP account must be configured to use chroot or a similarly isolated environment.
           If any files and directories within the ftp user's home directory are owned by any user other than root, or if any subdirectory other than pub has permissions more permissive than 0111, this is a finding.
          Procedure:
          # if grep -i ftp /etc/passwd;   then grep -i ftp /etc/passwd | awk "-F:" '{print $6}' | while read DIR; do ls $DIR; done;   else echo No FTP user; fi
          OUTPUT:
          ->  {{ checkmyconf1.stdout }}
          ====================================================================
          This is a FINDING
          -
      </output>
      <comments>there is anonymous FTP account on the system</comments>
      <status>Ongoing</status>
      <ccis>
        <cci>CCI-000366</cci>
      </ccis>
      </finding>
  when: checkmyconf2.stdout == ""

- name: V-4388 Fix-1
  shell:  #grep -i ftp /etc/passwd | awk "-F:" '{print $6}' | while read DIR; do ftpconfig $DIR; done 
  args:
    executable: /bin/bash
  ignore_errors: True
  when: (checkmyconf2.stdout == "" and FIX == 1)
